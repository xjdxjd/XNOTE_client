<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnote.client.module.system.mapper.SystemConfigMapper">
  <resultMap id="BaseResultMap" type="com.xnote.client.module.system.bean.SystemConfig">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="config_code" jdbcType="VARCHAR" property="configCode" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="config_type" jdbcType="INTEGER" property="configType" />
    <result column="config_remark" jdbcType="VARCHAR" property="configRemark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, config_code, config_name, config_value, config_type, config_remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xnote_sys_config
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <!-- =============================================================================== -->
  <select id="getAllClientConfig" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from xnote_sys_config
    where config_type = 1
  </select>



















  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xnote_sys_config
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xnote.client.module.system.bean.SystemConfig">
    insert into xnote_sys_config (id, config_code, config_name, 
      config_value, config_type, config_remark
      )
    values (#{id,jdbcType=VARCHAR}, #{configCode,jdbcType=VARCHAR}, #{configName,jdbcType=VARCHAR}, 
      #{configValue,jdbcType=VARCHAR}, #{configType,jdbcType=INTEGER}, #{configRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xnote.client.module.system.bean.SystemConfig">
    insert into xnote_sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="configCode != null">
        config_code,
      </if>
      <if test="configName != null">
        config_name,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="configType != null">
        config_type,
      </if>
      <if test="configRemark != null">
        config_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="configCode != null">
        #{configCode,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        #{configType,jdbcType=INTEGER},
      </if>
      <if test="configRemark != null">
        #{configRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnote.client.module.system.bean.SystemConfig">
    update xnote_sys_config
    <set>
      <if test="configCode != null">
        config_code = #{configCode,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        config_type = #{configType,jdbcType=INTEGER},
      </if>
      <if test="configRemark != null">
        config_remark = #{configRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnote.client.module.system.bean.SystemConfig">
    update xnote_sys_config
    set config_code = #{configCode,jdbcType=VARCHAR},
      config_name = #{configName,jdbcType=VARCHAR},
      config_value = #{configValue,jdbcType=VARCHAR},
      config_type = #{configType,jdbcType=INTEGER},
      config_remark = #{configRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>